=========================================================================
String:
=========================================================================
    直接赋值（=“hello”），只会开辟一块堆内存空间，并且该字符串对象可以保存在对象池中以供下次使用（每个赋值内容一样的数组，指向内存地址相同，减少内存重复开辟，节约内存）
    构造方法（new String("hello")）,会开辟两块堆内存空间， 其中一块堆内存空间将成为垃圾空间，并且不会保存在对象池中（可以使用.intern()方式手工入池（（new String("hello")。intern（）），除了这一缺点以外，实际上也会对字符串共享产生问题
所以直接赋值比构造方法好
-------------------------------------------------------------------------
    “==”	:进行的是数值比较，比较的是两个字符串内存地址数值
    “equal()"：	可以进行字符串内容的比较
最好字符串放在前面，如："hello".equal(input),防止没有输入内容造成错误

    字符串不适合频繁修改，如String x="hello "; x+="word";就产生三个内存空间“hello "、"word"、"hello word"，其中前两个为垃圾内存空间
-------------------------------------------------------------------------
总结：
    1.字符串的使用就采用直接赋值的模式完成。
    2.字符串的比较就使用equals（）方法实现
    3.字符串没事别改变太多
-------------------------------------------------------------------------
字符串与字符数组转换：
public String(char[] value)	将字符数组中的所有内容变为字符串
public String(char[] value, int offset, int count)	将字符数组中的部分内容变为字符串 offset：开始位置 count：个数
public char charAt(int index)	指定索引位置的字符，索引从0开始
public char[] toCharArray()	将字符串变为字符数组
-------------------------------------------------------------------------






=========================================================================






-------------------------------------------------------------------------
=========================================================================
-------------------------------------------------------------------------
=========================================================================
